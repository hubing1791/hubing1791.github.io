---
title: 五月份刷题记录
author: not_you
date: 2021-04-27 00:03:00 +0800
categories: ["leetcode"]
tags: [刷题]

---

### git链接

[我的leetcode刷题记录](https://github.com/hubing1791/my_leetcode)

### 958.二叉树的完全性检验

[题目链接](https://leetcode-cn.com/problems/check-completeness-of-a-binary-tree/)

（1）直接的思路是。利用层序遍历，并对节点编号，子节点编号为父节点的两倍或者两倍加一（对应左右节点），遍历结束后看是否是不断数字的单增序列即可，最后的判断不用遍历，因为是主动编的号，只要看最后一个数等于长度与否即可。

(2)一看答案思路一样的，答案写法更简洁。不过没什么差



### 92.反转链表2

[题目链接](https://leetcode-cn.com/problems/reverse-linked-list-ii/)

（1）总共需要找到4个节点，left的前节点，left，right的后节点，right，但是存在前后节点不存在的情况。

（2）对于1中的情况，left无前节点添加一个新的头即可使得统一处理方式，而right后节点不存在不影响处理

（3）一开始没看错题了，left和right指位置，当成val值了

（4）第二版写了一个一次遍历版



### 470,用 Rand7() 实现 Rand10()

[题目链接](https://leetcode-cn.com/problems/implement-rand10-using-rand7/)

（1）经典实现方式，先转化成一个均匀的49上的分布，对于多出来的再调用子集一次即可，连续不中的概率会持续降低

（2）题解给了继续利用被拒绝的数的算法，但是代码反而便繁琐了，效率没有明显提升



### 剑指offer36.二叉搜索树和双向链表

[题目链接](https://leetcode-cn.com/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof/)

（1）看题目描述，上来的思路是基于中序遍历改。首先想到了一个很简单暴力的方式，直接把中序遍历结果放在列表里，再连。对于只有一个结点的二叉搜索树一开始没兼顾到。

（2）看了题解，别人使用了递归，我使用的是迭代。



### 98.验证二叉搜索树

[题目链接](https://leetcode-cn.com/problems/validate-binary-search-tree/)

（1）直接中序遍历，使用迭代，在遍历的过程中就进行检验

（2）犯了个低级错误，while里的条件应该是stack or node，整半天没注意到，一直在疑惑

（2）二叉搜索树不允许有相同的值，一开始漏考虑了这个条件



### 148.排序链表

[题目链接](https://leetcode-cn.com/problems/sort-list/solution/)

（1）归并排序的应用，有自顶向下和自下至上，后者可以做到空间复杂度o（1）。后者其实也就是不递归的做法。

（2）参考了一下官方的题解，对于如何写递归式卡住了一下

（3）在把一个链表切开的过程中，使用快慢链表，会遇到一个问题。比如，[1,2,3,4,5,6],使用快慢链表切，例如慢指向3快指向6，这时候要么选择切断成两个链表，那得补充一个3->next=NULL，如果不补充，意味着切割后的实际上是[1,2,3],[3,4,5,6],3被重复指向了。而[解答链接]()里，使用了如图的方式，解决了这个问题。但是可读性挺差的。

![截图]({{site.url}}/assets/img/2021_04_27/1.png)

（4）基于一般的归并排序写了和官方题解不同的版本，通过锻炼避免（3）中的情况，比官方解答可读性更强

（5）在merge（）中连接两个链表时，链表1，链表2中同样val的节点，2中的会排在后面，因此需要在找head2尾巴时，在等于时页更新tail

![截图]({{site.url}}/assets/img/2021_04_27/2.png)



### 200.岛屿数量

[题目链接](https://leetcode-cn.com/problems/number-of-islands/)

（1）初始想法是将岛生成一个点的集合，然后组成一个列表，最后数列表。在具体实现过程中发现这个想法需要大量特殊情况。换了思路改为沉岛法。

（2）在一个令人无语的地方看了半天，题目给的0，1是字符串不是数字。

（3）题解有并查集法，值得看一下